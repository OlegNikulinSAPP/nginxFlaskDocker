services:
  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=mydb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydb"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build: ./backend
    volumes:
      - ./backend:/app
    environment:
      - FLASK_DEBUG=1
      - FLASK_ENV=development
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=mydb
    command: >
      sh -c "echo 'üïê –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥ –ø–æ–∫–∞ –ë–î –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è...' &&
      sleep 10 &&
      echo 'üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Flask...' &&
      python -m flask run --host=0.0.0.0 --port=5000 --debug"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./static:/var/www/static
    depends_on:
      - backend
    restart: unless-stopped

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    depends_on:
      - db
    restart: unless-stopped

volumes:
  postgres_data: