import os
from flask import Flask, jsonify
import psycopg2

app = Flask(__name__)


def get_db_connection():
    """
        –≠—Ç–æ –∫–∞–∫ –∫–ª—é—á –æ—Ç –∫–∞—Ä—Ç–æ—Ç–µ–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏.

        –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö PostgreSQL.
        –û–Ω–∞ –∑–Ω–∞–µ—Ç, –≥–¥–µ –Ω–∞–π—Ç–∏ –∫–∞—Ä—Ç–æ—Ç–µ–∫—É (—Ö–æ—Å—Ç), –∫–∞–∫ –æ–Ω–∞ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è (database),
        –∏ —É –∫–æ–≥–æ –µ—Å—Ç—å –∫–ª—é—á (user –∏ password).

        Returns:
            Connection object: –ö–ª—é—á –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞—Ä—Ç–æ—Ç–µ–∫–µ
        """
    # psycopg2 - —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø–æ—á—Ç–∞–ª—å–æ–Ω, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å
    # —Å PostgreSQL (—ç—Ç–æ —Ç–∞–∫–æ–π —É–º–Ω—ã–π –¥–æ–º–∏–∫ —Å –¥–∞–Ω–Ω—ã–º–∏)
    # .connect - —ç—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å –ø–æ—á—Ç–∞–ª—å–æ–Ω—É:
    # "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å—Ö–æ–¥–∏ –∫ –¥–æ–º–∏–∫—É —Å –¥–∞–Ω–Ω—ã–º–∏ –∏ –ø–æ—Å—Ç—É—á–∏ –≤ –¥–≤–µ—Ä—å!"
    conn = psycopg2.connect(                          # –í —Å–∫–æ–±–∫–∞—Ö –º—ã –≥–æ–≤–æ—Ä–∏–º –ø–æ—á—Ç–∞–ª—å–æ–Ω—É:
        host='db',                                    # üè† –ê–¥—Ä–µ—Å –¥–æ–º–∏–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
        database=os.environ.get('POSTGRES_DB'),       # üì¶ –ö–∞–∫–æ–π —è—â–∏–∫ –Ω–∞–º –Ω—É–∂–µ–Ω
        user=os.environ.get('POSTGRES_USER'),         # üë¶ –ù–∞—à–µ –∏–º—è
        password=os.environ.get('POSTGRES_PASSWORD')  # üîë –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á
    )
    # –ö–æ–≥–¥–∞ –ø–æ—á—Ç–∞–ª—å–æ–Ω —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç—É—á–∞–ª—Å—è –∏ –µ–≥–æ –ø—É—Å—Ç–∏–ª–∏ –≤–Ω—É—Ç—Ä—å,
    # –æ–Ω –ø—Ä–∏–Ω–æ—Å–∏—Ç –Ω–∞–º –≤–æ–ª—à–µ–±–Ω—É—é —Ç—Ä—É–±–∫—É –¥–ª—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ —Å –¥–æ–º–∏–∫–æ–º!
    # –≠—Ç–∞ —Ç—Ä—É–±–∫–∞ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è "conn" (—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ)
    return conn


@app.route('/')
def record_visit():
    """
    –≠—Ç–æ –≥–ª–∞–≤–Ω–∞—è –¥–≤–µ—Ä—å –Ω–∞—à–µ–≥–æ –¥–æ–º–∏–∫–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ.

    –ö–æ–≥–¥–∞ –∫—Ç–æ-—Ç–æ –∑–∞—Ö–æ–¥–∏—Ç –Ω–∞ –Ω–∞—à—É —Å—Ç—Ä–∞–Ω–∏—Ü—É, —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è:
    1. –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –∫–∞—Ä—Ç–æ—Ç–µ–∫—É
    2. –°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –∑–∞–ø–∏—Å–µ–π, –µ—Å–ª–∏ –µ–µ –µ—â–µ –Ω–µ—Ç
    3. –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –æ –≤–∏–∑–∏—Ç–µ
    4. –°—á–∏—Ç–∞–µ—Ç –≤—Å–µ –≤–∏–∑–∏—Ç—ã
    5. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç

    Returns:
        JSON: –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –∑–∞–ø–∏—Å–∏ –∏ –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–∑–∏—Ç–æ–≤
    """

    # –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á –æ—Ç –∫–∞—Ä—Ç–æ—Ç–µ–∫–∏
    conn = get_db_connection()
    # –°–æ–∑–¥–∞–µ–º –ø–æ–º–æ—â–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–∏—Å–∞—Ç—å –≤ –∫–∞—Ä—Ç–æ—Ç–µ–∫–µ
    cur = conn.cursor()
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∑–∞–ø–∏—Å–µ–π, –µ—Å–ª–∏ –µ–µ –µ—â–µ –Ω–µ—Ç
    # "CREATE TABLE IF NOT EXISTS" = "–°–æ–∑–¥–∞–π –ø–∞–ø–∫—É 'visits', –µ—Å–ª–∏ –µ–µ –µ—â–µ –Ω–µ—Ç"
    # "visits" –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–æ–º–µ—Ä –∑–∞–ø–∏—Å–∏ (id) –∏ –≤—Ä–µ–º—è –≤–∏–∑–∏—Ç–∞ (timestamp)
    cur.execute('CREATE TABLE IF NOT EXISTS visits ('
                'id serial PRIMARY KEY, '
                'timestamp timestamptz'
                ');')
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –æ –≤–∏–∑–∏—Ç–µ
    # "INSERT INTO visits" = "–ó–∞–ø–∏—à–∏ –≤ –ø–∞–ø–∫—É 'visits'"
    # "VALUES (NOW())" = "—Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è"
    cur.execute('INSERT INTO visits (timestamp) VALUES (NOW());')
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–∞—Ä—Ç–æ—Ç–µ–∫–µ (–∫–∞–∫ –∑–∞–∫—Ä—ã–≤–∞–µ–º –∏ –∑–∞–ø–∏—Ä–∞–µ–º —è—â–∏–∫)
    conn.commit()

    # –°—á–∏—Ç–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –≤ –ø–∞–ø–∫–µ
    # "SELECT COUNT(*)" = "–ü–æ—Å—á–∏—Ç–∞–π –≤—Å–µ –∑–∞–ø–∏—Å–∏"
    cur.execute('SELECT COUNT(*) FROM visits;')
    # –ë–µ—Ä–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–¥—Å—á–µ—Ç–∞
    count = cur.fetchone()[0]  # fetchone() –±–µ—Ä–µ—Ç –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É, [0] –±–µ—Ä–µ—Ç –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ
    # –£–±–∏—Ä–∞–µ–º –ø–æ–º–æ—â–Ω–∏–∫–∞ –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—Ç–µ–∫—É
    cur.close()
    conn.close()

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Å–∏–≤—É—é –±—É–º–∞–∂–∫—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
    return jsonify(message="Visit recorded successfully!", total_visits=count)


if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000, debug=True)
