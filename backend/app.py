import os
from flask import Flask, jsonify
import psycopg2

app = Flask(__name__)


def get_db_connection():
    """
        –≠—Ç–æ –∫–∞–∫ –∫–ª—é—á –æ—Ç –∫–∞—Ä—Ç–æ—Ç–µ–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏.

        –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö PostgreSQL.
        –û–Ω–∞ –∑–Ω–∞–µ—Ç, –≥–¥–µ –Ω–∞–π—Ç–∏ –∫–∞—Ä—Ç–æ—Ç–µ–∫—É (—Ö–æ—Å—Ç), –∫–∞–∫ –æ–Ω–∞ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è (database),
        –∏ —É –∫–æ–≥–æ –µ—Å—Ç—å –∫–ª—é—á (user –∏ password).

        Returns:
            Connection object: –ö–ª—é—á –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞—Ä—Ç–æ—Ç–µ–∫–µ
        """
    # psycopg2 - —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø–æ—á—Ç–∞–ª—å–æ–Ω, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å
    # —Å PostgreSQL (—ç—Ç–æ —Ç–∞–∫–æ–π —É–º–Ω—ã–π –¥–æ–º–∏–∫ —Å –¥–∞–Ω–Ω—ã–º–∏)
    # .connect - —ç—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å –ø–æ—á—Ç–∞–ª—å–æ–Ω—É:
    # "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å—Ö–æ–¥–∏ –∫ –¥–æ–º–∏–∫—É —Å –¥–∞–Ω–Ω—ã–º–∏ –∏ –ø–æ—Å—Ç—É—á–∏ –≤ –¥–≤–µ—Ä—å!"
    conn = psycopg2.connect(                          # –í —Å–∫–æ–±–∫–∞—Ö –º—ã –≥–æ–≤–æ—Ä–∏–º –ø–æ—á—Ç–∞–ª—å–æ–Ω—É:
        host='db',                                    # üè† –ê–¥—Ä–µ—Å –¥–æ–º–∏–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
        database=os.environ.get('POSTGRES_DB'),       # üì¶ –ö–∞–∫–æ–π —è—â–∏–∫ –Ω–∞–º –Ω—É–∂–µ–Ω
        user=os.environ.get('POSTGRES_USER'),         # üë¶ –ù–∞—à–µ –∏–º—è
        password=os.environ.get('POSTGRES_PASSWORD')  # üîë –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á
    )
    # –ö–æ–≥–¥–∞ –ø–æ—á—Ç–∞–ª—å–æ–Ω —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç—É—á–∞–ª—Å—è –∏ –µ–≥–æ –ø—É—Å—Ç–∏–ª–∏ –≤–Ω—É—Ç—Ä—å,
    # –æ–Ω –ø—Ä–∏–Ω–æ—Å–∏—Ç –Ω–∞–º –≤–æ–ª—à–µ–±–Ω—É—é —Ç—Ä—É–±–∫—É –¥–ª—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ —Å –¥–æ–º–∏–∫–æ–º!
    # –≠—Ç–∞ —Ç—Ä—É–±–∫–∞ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è "conn" (—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ)
    return conn


@app.route('/')
def record_visit():
    """Returns the number of times the page has been visited."""
    conn = get_db_connection()
    cur = conn.cursor()
    cur.execute('CREATE TABLE IF NOT EXISTS visits ('
                'id serial PRIMARY KEY, '
                'timestamp timestamptz'
                ');')
    cur.execute('INSERT INTO visits (timestamp) VALUES (NOW());')
    conn.commit()

    cur.execute('SELECT COUNT(*) FROM visits;')
    count = cur.fetchone()[0]
    cur.close()
    conn.close()

    return jsonify(message="Visit recorded successfully!", total_visits=count)


if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000, debug=True)
